<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Comunes</name>
    </assembly>
    <members>
        <member name="T:Zuliaworks.Netzuela.Valeria.Comunes.Constantes">
            <summary>
            Define constantes empleadas por todas las capas de Valeria
            </summary>    
        </member>
        <member name="T:Zuliaworks.Netzuela.Valeria.Comunes.Constantes.SGBDR">
            <summary>
            SGBDR: Sistemas Gestores de Bases de Datos Relacionales (RDBMS en inglés)
            </summary>
        </member>
        <member name="T:Zuliaworks.Netzuela.Valeria.Comunes.Constantes.MetodosDeConexion">
            <summary>
            Métodos de conexión
            </summary>        
        </member>
        <member name="T:Zuliaworks.Netzuela.Valeria.Comunes.Constantes.Credenciales">
            <summary>
            Credenciales
            </summary>
        </member>
        <member name="T:Zuliaworks.Netzuela.Valeria.Comunes.Constantes.NivelDeNodo">
            <summary>
            Credenciales
            </summary>
        </member>
        <member name="T:Zuliaworks.Netzuela.Valeria.Comunes.ColeccionesObservables">
            <summary>
            Contiene funciones adicionales para los tipos ObservableCollection
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Comunes.ColeccionesObservables.ConvertirAObservableCollection``1(System.Collections.Generic.IEnumerable{``0})">
            <summary>
            
            </summary>
            <typeparam name="T"></typeparam>
            <param name="Enumerable"></param>
            <returns></returns>
        </member>
        <member name="T:Zuliaworks.Netzuela.Valeria.Comunes.StringSegura">
            <summary>
            Contiene funciones adicionales para los tipos SecureString. Este codigo fue tomado de la pagina: 
            http://blogs.msdn.com/b/fpintos/archive/2009/06/12/how-to-properly-convert-securestring-to-string.aspx
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Comunes.StringSegura.ConvertirAUnsecureString(System.Security.SecureString)">
            <summary>
            
            </summary>
            <param name="StringSegura"></param>
            <returns></returns>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Comunes.StringSegura.ConvertirASecureString(System.String)">
            <summary>
            
            </summary>
            <param name="StringNoSegura"></param>
            <returns></returns>
        </member>
        <member name="T:Zuliaworks.Netzuela.Valeria.Comunes.DatosDeConexion">
            <summary>
            Esta clase se usa en todas partes. Lo que en verdad quiero hacer (y todavia no se como) son 
            2 clases: una que implemente INotifyPropertyChanged (para ser usada en la capa de logica y 
            presentacion) y otra que no (para usarse en la capa de datos). Seria muy facil simplemente 
            hacer dos clases distintas pero es mucho mas elegante que una derive de la otra. ¿Tendeis?
            </summary>
        </member>
    </members>
</doc>
