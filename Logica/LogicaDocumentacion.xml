<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Logica</name>
    </assembly>
    <members>
        <member name="T:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeColumnas">
            <summary>
            Se emplea para mapear (sic), esto es, para crear una transformación o mediación 
            de datos entre dos repositorios (columnas en este caso) distintos. Esta clase es 
            empleada por <see cref="T:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeTablas"/> como unidad básica de mapeo.
            </summary>
        </member>
        <member name="F:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeColumnas.MapaTabla">
            <summary>
            Instancia de <see cref="T:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeTablas"/> asociada a esta clase.
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeColumnas.#ctor">
            <summary>
            Crea un mapeo de columnas vacío.
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeColumnas.#ctor(Zuliaworks.Netzuela.Valeria.Logica.Nodo)">
            <summary>
            Crea un mapeo de columnas especificando sólo la columna destino.
            </summary>
            <param name="ColumnaDestino">Nodo que representa la columna destino.</param>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeColumnas.#ctor(Zuliaworks.Netzuela.Valeria.Logica.Nodo,Zuliaworks.Netzuela.Valeria.Logica.Nodo)">
            <summary>
            Crea un mapeo de columnas especificando la columna de orígen y la de destino.
            </summary>
            <param name="ColumnaDestino">Nodo que representa la columna destino.</param>
            <param name="ColumnaOrigen">Nodo que representa la columna orígen.</param>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeColumnas.Asociar(Zuliaworks.Netzuela.Valeria.Logica.Nodo)">
            <summary>
            
            </summary>
            <param name="ColumnaOrigen"></param>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeColumnas.Desasociar">
            <summary>
            
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeColumnas.RegistrarCambioEnPropiedad(System.String)">
            <summary>
            Esta función se llama de forma interna cuando se cambia una propiedad de esta clase
            </summary>
            <param name="info">Nombre de la propiedad modificada.</param>
        </member>
        <member name="P:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeColumnas.ColumnaOrigen">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeColumnas.ColumnaDestino">
            <summary>
            
            </summary>
        </member>
        <member name="E:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeColumnas.PropertyChanged">
            <summary>
            Evento que se activa cuando una propiedad de esta clase ha sido modificada.
            </summary>
        </member>
        <member name="T:Zuliaworks.Netzuela.Valeria.Logica.Conexion">
            <summary>
            Esta clase permite establecer una conexión con cualquier fuente de datos compatible 
            de forma transparente para el programador. Implementa la interfaz 
            <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> para hacer visibles algunas de sus propiedades 
            a la capa de presentación.
            </summary>
        </member>
        <member name="F:Zuliaworks.Netzuela.Valeria.Logica.Conexion.BD">
            <summary>
            Proveedor de datos creado a partir de las especificaciones de conexión.
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Conexion.#ctor">
            <summary>
            Crea una conexión vacía.
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Conexion.#ctor(Zuliaworks.Netzuela.Valeria.Comunes.DatosDeConexion)">
            <summary>
            Crea una conexión con el servidor especificado.
            </summary>
            <param name="Datos">Datos de configuración de la conexión con el servidor.</param>
            <exception cref="T:System.ArgumentNullException">Si <paramref name="Datos"/> es una referencia 
            nula.</exception>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Conexion.Conectar(System.Security.SecureString,System.Security.SecureString)">
            <summary>
            Abre la conexión con el servidor especificado en <see cref="P:Zuliaworks.Netzuela.Valeria.Logica.Conexion.Datos"/>.
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Conexion.Desconectar">
            <summary>
            Cierra la conexión con el servidor.
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Conexion.DetectarServidoresLocales">
            <summary>
            Obtiene los detalles de conexión de todos los servidores detectados en el equipo local.
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Conexion.RegistrarCambioEnPropiedad(System.String)">
            <summary>
            Esta función se llama de forma interna cuando se cambia una propiedad de esta clase
            </summary>
            <param name="info">Nombre de la propiedad modificada.</param>
        </member>
        <member name="P:Zuliaworks.Netzuela.Valeria.Logica.Conexion.Datos">
            <summary>
            Parámetros de la conexión con el servidor actual.
            </summary>
        </member>
        <member name="E:Zuliaworks.Netzuela.Valeria.Logica.Conexion.PropertyChanged">
            <summary>
            Evento que se activa cuando una propiedad de esta clase ha sido modificada.
            </summary>
        </member>
        <member name="T:Zuliaworks.Netzuela.Valeria.Logica.Explorador">
            <summary>
            Esta clase se emplea para acceder a los datos de una fuente cuya estructura 
            sea de tipo árbol de nodos. Implementa la interfaz <see cref="T:System.ComponentModel.INotifyPropertyChanged"/>
            para hacer visibles algunas de sus propiedades a la capa de presentación.
            </summary>
        </member>
        <member name="F:Zuliaworks.Netzuela.Valeria.Logica.Explorador.NodoTablaActual">
            <summary>
            Indica el nodo asociado a la tabla actual (no necesariamente es igual a <see cref="P:Zuliaworks.Netzuela.Valeria.Logica.Explorador.NodoActual"/>).
            </summary>
        </member>
        <member name="F:Zuliaworks.Netzuela.Valeria.Logica.Explorador.Tablas">
            <summary>
            Es la caché de tablas del explorador.
            </summary>
        </member>
        <member name="F:Zuliaworks.Netzuela.Valeria.Logica.Explorador.BD">
            <summary>
            Es el proveedor de datos del explorador.
            </summary>
        </member>
        <member name="F:Zuliaworks.Netzuela.Valeria.Logica.Explorador._NodoActual">
            <summary>
            Indica el nodo actual seleccionado.
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Explorador.#ctor">
            <summary>
            Construye un explorador vacio.
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Explorador.#ctor(System.Collections.ObjectModel.ObservableCollection{Zuliaworks.Netzuela.Valeria.Logica.Nodo},Zuliaworks.Netzuela.Valeria.Datos.IBaseDeDatos)">
            <summary>
            Construye un explorador con determinado arbol de nodos y proveedor de datos.
            </summary>
            <param name="Nodos">Árbol de nodos a emplear. Si se trata de un explorador de carga
            de nodos por demanda (lazy loading), el árbol pasado como parámetro por lo general 
            sólo contiene el nodo inicial.</param>
            <param name="BD">Proveedor de datos. A través de este se obtiene la data y metadata 
            de los nodos del árbol.</param>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Explorador.ExpandirTodo">
            <summary>
            Expande todos los nodos del árbol de nodos <see cref="P:Zuliaworks.Netzuela.Valeria.Logica.Explorador.Nodos"/> de este explorador.
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Explorador.ExpandirTodo(System.Collections.ObjectModel.ObservableCollection{Zuliaworks.Netzuela.Valeria.Logica.Nodo})">
            <summary>
            Expande todos los nodos del árbol de nodos especificado.
            </summary>
            <param name="Nodos">Arbol a expandir.</param>
            <exception cref="T:System.ArgumentNullException">Si <paramref name="Nodos"/> es una referencia 
            nula.</exception>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Explorador.Expandir(Zuliaworks.Netzuela.Valeria.Logica.Nodo)">
            <summary>
            Obtiene el contenido del nodo especificado desde el proveedor de datos.
            </summary>
            <param name="Item">Nodo a expandir. El nivel de este nodo solo puede ser uno de los 
            especificados en <see cref="T:Zuliaworks.Netzuela.Valeria.Comunes.Constantes.NivelDeNodo"/>.</param>
            <exception cref="T:System.ArgumentNullException">Si <paramref name="Item"/> es una referencia 
            nula.</exception>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Explorador.ObtenerTabla(Zuliaworks.Netzuela.Valeria.Logica.Nodo)">
            <summary>
            Lee la tabla especificada desde el proveedor de datos.
            </summary>
            <param name="Tabla">Nodo del árbol de datos cuya tabla se quiere obtener</param>
            <returns>Tabla leída desde el proveedor de datos o nulo si no se pudo encontrar.</returns>
            <exception cref="T:System.ArgumentNullException">Si <paramref name="Tabla"/> es una referencia 
            nula.</exception>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Explorador.ObtenerTablasCache">
            <summary>
            Devuelve las tablas presentes en la caché de tablas.
            </summary>
            <returns>Lista de las tablas guardadas en la caché.</returns>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Explorador.ObtenerNodosCache">
            <summary>
            Devuelve los nodos asociados a las tablas de la caché de tablas.
            </summary>
            <returns>Lista de los nodos de tablas guardados en la caché.</returns>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Explorador.RegistrarCambioEnPropiedad(System.String)">
            <summary>
            Esta función se llama de forma interna cuando se cambia una propiedad de esta clase
            </summary>
            <param name="info">Nombre de la propiedad modificada.</param>
        </member>
        <member name="P:Zuliaworks.Netzuela.Valeria.Logica.Explorador.TablaActual">
            <summary>
            Lee o escribe la cache de tablas en la entrada especificada por <see cref="F:Zuliaworks.Netzuela.Valeria.Logica.Explorador.NodoTablaActual"/>.
            </summary>
        </member>
        <member name="P:Zuliaworks.Netzuela.Valeria.Logica.Explorador.NodoActual">
            <summary>
            Indica el nodo actual seleccionado.
            </summary>
        </member>
        <member name="P:Zuliaworks.Netzuela.Valeria.Logica.Explorador.Nodos">
            <summary>
            Representa la colección de nodos que conforman el arbol de datos.
            </summary>
        </member>
        <member name="E:Zuliaworks.Netzuela.Valeria.Logica.Explorador.PropertyChanged">
            <summary>
            Evento que se activa cuando una propiedad de esta clase ha sido modificada.
            </summary>
        </member>
        <member name="T:Zuliaworks.Netzuela.Valeria.Logica.Nodo">
            <summary>
            Implementación de la unidad básica de información de una estructura de datos 
            en forma de árbol. Se usa para representar la organizacion interna de las 
            bases de datos.
            </summary>
        </member>
        <member name="F:Zuliaworks.Netzuela.Valeria.Logica.Nodo.Expandido">
            <summary>
            
            </summary>
        </member>
        <member name="F:Zuliaworks.Netzuela.Valeria.Logica.Nodo.Nivel">
            <summary>
            
            </summary>
        </member>
        <member name="F:Zuliaworks.Netzuela.Valeria.Logica.Nodo.Padre">
            <summary>
            
            </summary>
        </member>
        <member name="F:Zuliaworks.Netzuela.Valeria.Logica.Nodo.Explorador">
            <summary>
            
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Nodo.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Nodo.#ctor(System.String)">
            <summary>
            
            </summary>
            <param name="Nombre"></param>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Nodo.#ctor(System.String,System.Int32)">
            <summary>
            
            </summary>
            <param name="Nombre"></param>
            <param name="Nivel"></param>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Nodo.#ctor(System.String,Zuliaworks.Netzuela.Valeria.Logica.Nodo)">
            <summary>
            
            </summary>
            <param name="Nombre"></param>
            <param name="Padre"></param>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Nodo.#ctor(System.String,Zuliaworks.Netzuela.Valeria.Logica.Nodo,System.Collections.ObjectModel.ObservableCollection{Zuliaworks.Netzuela.Valeria.Logica.Nodo})">
            <summary>
            
            </summary>
            <param name="Nombre"></param>
            <param name="Padre"></param>
            <param name="Hijos"></param>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Nodo.#ctor(System.String,Zuliaworks.Netzuela.Valeria.Logica.Nodo,System.String[])">
            <summary>
            
            </summary>
            <param name="Nombre"></param>
            <param name="Padre"></param>
            <param name="Hijos"></param>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Nodo.AgregarHijo(Zuliaworks.Netzuela.Valeria.Logica.Nodo)">
            <summary>
            
            </summary>
            <param name="Hijo"></param>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Nodo.BuscarNodo(System.String,System.Collections.ObjectModel.ObservableCollection{Zuliaworks.Netzuela.Valeria.Logica.Nodo})">
            <summary>
            
            </summary>
            <param name="Nombre"></param>
            <param name="Lista"></param>
            <returns></returns>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Nodo.RutaCompleta(Zuliaworks.Netzuela.Valeria.Logica.Nodo)">
            <summary>
            
            </summary>
            <param name="Nodo"></param>
            <returns></returns>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Nodo.ListarHijos(Zuliaworks.Netzuela.Valeria.Logica.Nodo)">
            <summary>
            
            </summary>
            <param name="Nodo"></param>
            <returns></returns>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.Nodo.RegistrarCambioEnPropiedad(System.String)">
            <summary>
            Esta función se llama de forma interna cuando se cambia una propiedad de esta clase
            </summary>
            <param name="info">Nombre de la propiedad modificada.</param>
        </member>
        <member name="P:Zuliaworks.Netzuela.Valeria.Logica.Nodo.Hijos">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zuliaworks.Netzuela.Valeria.Logica.Nodo.Nombre">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zuliaworks.Netzuela.Valeria.Logica.Nodo.MapaColumna">
            <summary>
            
            </summary>
        </member>
        <member name="E:Zuliaworks.Netzuela.Valeria.Logica.Nodo.PropertyChanged">
            <summary>
            Evento que se activa cuando una propiedad de esta clase ha sido modificada.
            </summary>
        </member>
        <member name="T:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeTablas">
            <summary>
            
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeTablas.#ctor">
            <summary>
            
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeTablas.#ctor(Zuliaworks.Netzuela.Valeria.Logica.Nodo)">
            <summary>
            
            </summary>
            <param name="Tabla"></param>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeTablas.NodoEsLegal(Zuliaworks.Netzuela.Valeria.Logica.Nodo)">
            <summary>
            
            </summary>
            <param name="Nodo"></param>
            <returns></returns>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeTablas.AgregarMapa(Zuliaworks.Netzuela.Valeria.Logica.MapeoDeColumnas)">
            <summary>
            
            </summary>
            <param name="MapaDeColumna"></param>
            <returns></returns>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeTablas.TablaMapeada">
            <summary>
            
            </summary>
            <returns></returns>
        </member>
        <member name="P:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeTablas.MapasColumnas">
            <summary>
            
            </summary>
        </member>
        <member name="P:Zuliaworks.Netzuela.Valeria.Logica.MapeoDeTablas.Tabla">
            <summary>
            
            </summary>
        </member>
        <member name="T:Zuliaworks.Netzuela.Valeria.Logica.BarraDeEstado">
            <summary>
             La función de esta clase es mantener un registro actualizado del estado de la aplicación.
             Implementa la interfaz <see cref="T:System.ComponentModel.INotifyPropertyChanged"/> para hacer visibles algunas 
             de sus propiedades a la capa de presentación.
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.BarraDeEstado.#ctor">
            <summary>
            Crea una barra de estado vacía.
            </summary>
        </member>
        <member name="M:Zuliaworks.Netzuela.Valeria.Logica.BarraDeEstado.RegistrarCambioEnPropiedad(System.String)">
            <summary>
            Esta función se llama de forma interna cuando se cambia una propiedad de esta clase
            </summary>
            <param name="info">Nombre de la propiedad modificada.</param>
        </member>
        <member name="P:Zuliaworks.Netzuela.Valeria.Logica.BarraDeEstado.EstadoConexion">
            <summary>
            Indica el estado de la conexión en el formato establecido en <see cref="T:System.Data.ConnectionState"/>
            </summary>
        </member>
        <member name="E:Zuliaworks.Netzuela.Valeria.Logica.BarraDeEstado.PropertyChanged">
            <summary>
            Evento que se activa cuando una propiedad de esta clase ha sido modificada.
            </summary>
        </member>
    </members>
</doc>
